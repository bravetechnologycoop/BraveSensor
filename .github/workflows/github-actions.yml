name: test

on:
  push:
    branches:
    - 'ew/*'
    pull_request:
    branches:
    - 'ew/*'

env:
  WEB_USERNAME_TEST: TravisDashboardUsername # change these
  PASSWORD_TEST: TravisDashboardPassword
  SECRET_TEST: TravisCookieSecret
  PG_USER_TEST: brave
  PG_DATABASE_TEST: brave
  PG_PASSWORD_TEST: travispassword
  PG_PORT_TEST: 5433
  PG_HOST_TEST: localhost
  PG_DATABASE: brave
  PG_PASSWORD: travispassword
  PG_PORT: 5433
  PG_HOST: localhost
  SESSION_RESET_THRESHOLD_TEST: 2000
  SESSION_NUMBER_OF_ALERTS_TO_ACCEPT_RESET_REQUEST_TEST: 4
  LOW_BATTERY_ALERT_TIMEOUT_TEST: 2
  MAX_STILLNESS_ALERTS_TEST: 2
  INTERVAL_TO_CHECK_ALERTS_TEST: 60
  SUBSEQUENT_VITALS_ALERT_THRESHOLD_TEST: 2
  IS_DB_LOGGING: false
  PA_API_KEY_PRIMARY_TEST: primaryPAkey
  PA_API_KEY_SECONDARY_TEST: secondaryPAkey
  PA_CLIENT_ID: fakeclientid.apps.googleusercontent.com
  PA_CLIENT_SECRET: fakeclientsecret
  PARTICLE_WEBHOOK_API_KEY_TEST: webhookKey
  CONSECUTIVE_OPEN_DOOR_HEARTBEAT_THRESHOLD_TEST: 432
  CONSECUTIVE_OPEN_DOOR_FOLLOW_UP_TEST: 144
  PGVER: 12
  PGPORT: 5433
  TWILIO_SID_TEST: ${{ secrets.TWILIO_SID_TEST }}
  TWILIO_TOKEN_TEST: ${{ secrets.TWILIO_TOKEN_TEST }}
  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  jobs:
    server_tests:
      runs-on: ubuntu-latest
      strategy:
        matrix:
        node-version: [18.16.1] # add node version

      steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version}}

      - name: Install npm dependencies
        run: |
          cd server
          npm ci

      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install postgresql-12 postgresql-client-12

      - name: Setup PostgreSQL
        run: bash setup_postgresql_local.sh

      - name: Run security audit, linting, and tests
        if: github.event_name == 'pull_request'
        run: |
          npx audit-ci --config ./audit-ci.json
          npm run lint
          sudo env "PATH=$PATH" npm test

    firmware_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Print message for future implementation
        run: echo 'Please implement this in the future using GitHub Actions.'

    firmware_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and test firmware
        run: |
          cd firmware/boron-ins-fsm/test
          g++ -std=c++11 -I../inc -I./ -I./mocks -o ConsoleTests consoleFunctionTests.cpp -lstdc++ -lm && ./ConsoleTests -s
          g++ -std=c++11 -I../inc -I./ -I./mocks -I../lib/CircularBuffer/src -o ins3331Tests ins3331Tests.cpp -lstdc++ -lm && ./ins3331Tests -s
          g++ -std=c++11 -I../inc -I./ -I./mocks -o DoorSensorTests imDoorSensorTests.cpp -lstdc++ -lm && ./DoorSensorTests -s