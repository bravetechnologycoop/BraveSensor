name: CI

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  server:
    name: Server
    runs-on: ubuntu-latest

    services: 
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: brave
          POSTGRES_DB: bravesensor
          POSTGRES_PASSWORD: travispassword
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U brave -d bravesensor"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      WEB_USERNAME_TEST: TravisDashboardUsername # change these
      PASSWORD_TEST: TravisDashboardPassword
      SECRET_TEST: TravisCookieSecret
      PG_USER_TEST: brave
      PG_DATABASE_TEST: brave
      PG_PASSWORD_TEST: travispassword
      PG_PORT_TEST: 5433
      PG_HOST_TEST: localhost
      PG_DATABASE: brave
      PG_PASSWORD: travispassword
      PG_PORT: 5433
      PG_HOST: localhost
      SESSION_RESET_THRESHOLD_TEST: 2000
      SESSION_NUMBER_OF_ALERTS_TO_ACCEPT_RESET_REQUEST_TEST: 4
      LOW_BATTERY_ALERT_TIMEOUT_TEST: 2
      MAX_STILLNESS_ALERTS_TEST: 2
      INTERVAL_TO_CHECK_ALERTS_TEST: 60
      SUBSEQUENT_VITALS_ALERT_THRESHOLD_TEST: 2
      IS_DB_LOGGING: false
      PA_API_KEY_PRIMARY_TEST: primaryPAkey
      PA_API_KEY_SECONDARY_TEST: secondaryPAkey
      PA_CLIENT_ID: fakeclientid.apps.googleusercontent.com
      PA_CLIENT_SECRET: fakeclientsecret
      PARTICLE_WEBHOOK_API_KEY_TEST: webhookKey
      CONSECUTIVE_OPEN_DOOR_HEARTBEAT_THRESHOLD_TEST: 432
      CONSECUTIVE_OPEN_DOOR_FOLLOW_UP_TEST: 144
      PGVER: 12
      PGPORT: 5433
      TWILIO_SID_TEST: ${{ secrets.TWILIO_SID_TEST }}
      TWILIO_TOKEN_TEST: ${{ secrets.TWILIO_TOKEN_TEST }}
      DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ./.nvmrc

      - name: Install npm dependencies
        working-directory: ./server
        run: npm ci

      # - name: Install PostgreSQL
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install postgresql-14 postgresql-client-14

      - name: Setup PostgreSQL
        working-directory: ./server
        run: ./setup_postgresql_local.sh

      - name: Run security audit, linting, and tests
        if: github.event_name == 'pull_request'
        run: |
          npx audit-ci --config ./audit-ci.json
          npm run lint
          sudo env "PATH=$PATH" npm test
