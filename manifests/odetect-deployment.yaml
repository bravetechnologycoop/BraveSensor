apiVersion: v1
kind: Service
metadata:
  labels:
    app: odetect
  name: odetect
  selfLink: /api/v1/namespaces/default/services/odetect
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: odetect
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "6"
  generation: 1
  labels:
    app: odetect
  name: odetect
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/odetect
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: odetect
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2020-04-22T17:12:31Z"
      creationTimestamp: null
      labels:
        app: odetect
    spec:
      containers:
      - image: docker.io/mariocimet/odetect-backend:latest
        imagePullPolicy: Always
        name: odetect-backend
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
